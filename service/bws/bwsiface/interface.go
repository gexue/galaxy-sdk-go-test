// Code generated by private/model/cli/gen-api/main.go. DO NOT EDIT.

// Package bwsiface provides an interface to enable mocking the bws service client
// for testing your code.
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters.
package bwsiface

import (
	"github.com/gexue/galaxy-sdk-go-test/service/bws"
	"github.com/aws/aws-sdk-go/aws"
	"github.com/aws/aws-sdk-go/aws/request"
)

// BwsAPI provides an interface to enable mocking the
// bws.Bws service client's API operation,
// paginators, and waiters. This make unit testing your code that calls out
// to the SDK's service client's calls easier.
//
// The best way to use this interface is so the SDK's service client's calls
// can be stubbed out for unit testing your code with the SDK without needing
// to inject custom request handlers into the SDK's request pipeline.
//
//    // myFunc uses an SDK service client to make a request to
//    // bws.
//    func myFunc(svc bwsiface.BwsAPI) bool {
//        // Make svc.AssociateBandWidthShare request
//    }
//
//    func main() {
//        sess := session.New()
//        svc := bws.New(sess)
//
//        myFunc(svc)
//    }
//
// In your _test.go file:
//
//    // Define a mock struct to be used in your unit tests of myFunc.
//    type mockBwsClient struct {
//        bwsiface.BwsAPI
//    }
//    func (m *mockBwsClient) AssociateBandWidthShare(input *map[string]interface{}) (*map[string]interface{}, error) {
//        // mock response/functionality
//    }
//
//    func TestMyFunc(t *testing.T) {
//        // Setup Test
//        mockSvc := &mockBwsClient{}
//
//        myfunc(mockSvc)
//
//        // Verify myFunc's functionality
//    }
//
// It is important to note that this interface will have breaking changes
// when the service model is updated and adds new API operations, paginators,
// and waiters. Its suggested to use the pattern above for testing, or using
// tooling to generate mocks to satisfy the interfaces.
type BwsAPI interface {
	AssociateBandWidthShare(*map[string]interface{}) (*map[string]interface{}, error)
	AssociateBandWidthShareWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	AssociateBandWidthShareRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	CreateBandWidthShare(*map[string]interface{}) (*map[string]interface{}, error)
	CreateBandWidthShareWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	CreateBandWidthShareRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DeleteBandWidthShare(*map[string]interface{}) (*map[string]interface{}, error)
	DeleteBandWidthShareWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DeleteBandWidthShareRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DescribeBandWidthShares(*map[string]interface{}) (*map[string]interface{}, error)
	DescribeBandWidthSharesWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DescribeBandWidthSharesRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	DisassociateBandWidthShare(*map[string]interface{}) (*map[string]interface{}, error)
	DisassociateBandWidthShareWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	DisassociateBandWidthShareRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})

	ModifyBandWidthShare(*map[string]interface{}) (*map[string]interface{}, error)
	ModifyBandWidthShareWithContext(aws.Context, *map[string]interface{}, ...request.Option) (*map[string]interface{}, error)
	ModifyBandWidthShareRequest(*map[string]interface{}) (*request.Request, *map[string]interface{})
}

var _ BwsAPI = (*bws.Bws)(nil)
